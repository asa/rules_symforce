"""
# Cythonizes the .pyx files into .cpp file (but doesn't compile it)
"""
#cython_add_module_pyx
def _cython_add_module_pyx_impl(ctx):

    arguments = []
    all_inputs = []

    for arg in ctx.attr.cython_flags:
        arguments.extend([arg])

    for src in ctx.files.srcs:
        all_inputs.append(src)

    for pyx in ctx.files.pyx:
        all_inputs.append(pyx)

    # for the additional imports, grab the include directories
    for file in all_inputs:
        arguments.extend(["-I", file.dirname])

    arguments.extend([
        "-o",
        ctx.outputs.output.path,
    ])

    # these files appear to be needed to be in include directories
    # but not directly passed into cython
    #for src in ctx.files.srcs:
    #    arguments.append(src.path)

    for pyx in ctx.files.pyx:
        arguments.append(pyx.path)

    all_outputs = [ctx.outputs.output]

    ctx.actions.run(
        inputs = all_inputs,
        outputs = all_outputs,
        arguments = arguments,
        env = {
               "PYTHONHASHSEED":"0",
               "CYTHON_FORCE_REGEN": "1",
        },
        mnemonic = "Cythonizing",
        progress_message = "Cythonizing ...",
        executable = ctx.executable._cython,
    )

    compilation_context = cc_common.create_compilation_context(
            includes = depset([file.dirname for file in all_outputs]),
    )
    return (
            CcInfo( compilation_context = compilation_context),
            DefaultInfo(files = depset(all_outputs))
    )


cython_add_module_pyx = rule(
    attrs = {
        "pyx": attr.label(
            doc = "The .pyx file to be cythonized -> .cpp",
            allow_single_file = True,
            mandatory = True,
        ),        
        "srcs": attr.label_list(
            allow_files = True,
            doc = "other sources to be included in the cythonization",
        ),
        "cython_flags": attr.string_list(
             default = [],
        ),
        "includes": attr.string_list(),
        "output": attr.output(
             doc = "The .cpp file generated by cython",
        ),
        "_cython": attr.label(
            executable = True,
            cfg = "host",
            default = Label("@cython"),
        ),
    },
    implementation = _cython_add_module_pyx_impl,
)

