package(default_visibility = ["//visibility:public"])

load("@symforce_requirements//:requirements.bzl", "requirement")
load("@rules_symforce//symforce:lcmgen.bzl", "cc_lcm_library")

COPTS = ["-std=c++17"]

cc_library(
    name = "skymarshal_core",
    hdrs = [
       "third_party/skymarshal/include/lcm/lcm_coretypes.h",
      ],
    defines=["SKYMARSHAL_PRINTING_ENABLED"],
    includes=["third_party/skymarshal/include"],
    copts=COPTS,
)

cc_library(
    name = "eigen_lcm",
    hdrs = glob([
       "third_party/eigen_lcm/lcmtypes/eigen_lcm_lcm/cpp/lcmtypes/eigen_lcm/*.hpp"
      ]),
    includes=["third_party/eigen_lcm/lcmtypes/eigen_lcm_lcm/cpp/"],
    copts=["-std=c++17"],
)

cc_library(
    name = "symforce",
    srcs = glob([
        "symforce/**/*.h",
        "symforce/**/*.hpp",
        "symforce/**/*.tcc",
        "symforce/**/*.cc",
    ],   exclude=[
          "symforce/opt/**",
          "symforce/pybind/**",
          "symforce/benchmarks/**",
          "symforce/examples/**",
     ]),
    includes = ["."],
    deps=[
        "@spdlog",
        "@eigen",
        ":opt",
        ":gen",
    ],
    copts=COPTS,
)

py_library(
    name = "python",
    srcs = glob([
            "symforce/**/*.py"
    ]),
)

cc_lcm_library(
        name="lcmtypes",
        srcs = [
            "lcmtypes/symforce_types.lcm",
            "lcmtypes/symforce.lcm",
        ],
)

cc_library(
    name = "gen",
    srcs = glob([
       "gen/**/*.cc",
    ]),
    hdrs =  glob([
        "gen/**/*.h",
      ]),
    includes=["gen/cpp"],
    deps = [
        ":lcmtypes",
        "@eigen",
    ],
    copts=COPTS,
)

cc_library(
    name = "opt",
    srcs = glob([
       "symforce/opt/**/*.cc",
    ],
    exclude=[
       "symforce/opt/sparse_cholesky/**",
    ]),
    hdrs =  glob([
        "symforce/opt/**/*.h",
        "symforce/opt/**/*.tcc",
      ],
        exclude=[
          "symforce/opt/sparse_cholesky/**",
     ]),
    deps = [
        ":sparse_cholesky",
        ":skymarshal_core",
        ":lcmtypes",
        ":eigen_lcm",
        ":gen",
        "@metis",
        "@eigen",
        "@spdlog",
        "@fmt",
        "@tl_optional",
    ],
    copts=COPTS,
)

cc_library(
    name = "sparse_cholesky",
    srcs = glob([
       "symforce/opt/sparse_cholesky/**/*.cc",
       "symforce/opt/sparse_cholesky/**/*.tcc",
    ]),
    hdrs =  glob([
       "symforce/opt/sparse_cholesky/**/*.h",
       "symforce/opt/assert.h",
    ]),
    deps = [
        "@metis",
        "@eigen",
        "@spdlog",
        "@fmt",
    ],
    copts=COPTS,
)

